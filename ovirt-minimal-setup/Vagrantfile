# -*- mode: ruby -*-
# vi: set ft=ruby :

# network options
def network_options(type, ip, dhcp_enable)
    options = {}
    options[:ip] = ip
    options[:type] = type
    options[:libvirt__dhcp_enabled] = dhcp_enable

    options
end

def ipv6_network_options(type, ip, dhcp_enable, ipv6_gateway, ipv6_prefix)
    options = {}
        options[:ip] = ip
        options[:type] = type
        options[:libvirt__dhcp_enabled] = dhcp_enable
        options[:libvirt__guest_ipv6] = "yes"
        options[:libvirt__ipv6_address] = ipv6_gateway
        options[:libvirt__ipv6_prefix] = ipv6_prefix
        options
end

def ipv6_only_host_setup(ip, gateway, interface)
    return "nmcli con modify \"System #{interface}\" ipv6.addresses #{ip} \
            ipv6.gateway #{gateway} ipv6.method manual  ipv4.addresses \"\" ipv4.method disabled
            nmcli con up \"System #{interface}\""
end

def shell_provision(node, command)
    node.vm.provision "shell", inline: command
end

def copy_file(node, source, destination)
    node.vm.provision "file",
        source: source,
        destination: destination
end

Vagrant.configure("2") do |config|

    config.vm.provider :libvirt do |p|
        p.management_network_name = "ovirt-minimal-management"
        p.management_network_address = '192.168.124.0/24'
        p.management_network_guest_ipv6 = "yes"
        p.cpus = 2
        p.nested = true
        p.cpu_mode = "host-passthrough"
    end

    config.vm.define "engine" do |node|
        node.vm.box = "centos/7"

        node.vm.provider :libvirt do |domain|
            domain.memory = 4096
        end

        if ENV.has_key?("IPV6_ONLY")
            # For pure IPv6 deployment
            node.vm.network :private_network,
                ipv6_network_options("nat", "192.168.250.200", false, "fd00:1234:5678:500::1", "64")
            shell_provision(node, ipv6_only_host_setup("fd00:1234:5678:500::200/64", "fd00:1234:5678:500::1", "eth1"))
        end

        copy_file(node, "../common/scripts/engine_setup.sh", "/tmp/engine_setup.sh")
        copy_file(node, "../common/answers/answer.conf", "/tmp/answer.conf")

        shell_provision(node, "sh /tmp/engine_setup.sh")
    end

    config.vm.define "host0" do |node|
        node.vm.box = "centos/7"

        node.vm.provider :libvirt do |domain|
            domain.memory = 4096
        end

        if ENV.has_key?("IPV6_ONLY")
            # For pure IPv6 deployment
            node.vm.network :private_network,
                ipv6_network_options("nat", "192.168.250.100", false, "fd00:1234:5678:500::1", "64")
            shell_provision(node, ipv6_only_host_setup("fd00:1234:5678:500::100/64", "fd00:1234:5678:500::1", "eth1"))
        end

        copy_file(node, "../common/scripts/host_nfs_storage_setup.sh", "/tmp/host_nfs_storage_setup.sh")
        copy_file(node, "../common/scripts/host_setup.sh", "/tmp/host_setup.sh")

        shell_provision(node, "sh /tmp/host_setup.sh")
    end

    config.vm.provision "shell", inline: <<-SHELL
        yum -y update
        yum -y install http://resources.ovirt.org/pub/yum-repo/ovirt-release-master.rpm
        sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/" /etc/ssh/sshd_config
        systemctl restart sshd
    SHELL
end
